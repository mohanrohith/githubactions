name: Release app

on:
  issue_comment:
    types:
      - "created"

jobs:
  version_bump:
    name: Version Bump
    runs-on: macos-latest
    
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/release' }}
    steps:
    
    - name: Extract branch name
      run: echo ::set-output name=branch::"${GITHUB_REF#refs/heads/}"
      id: extract_branch

    - uses: actions/checkout@v2
      with:
        repository: ${{ github.event.pull_request.head.repo.full_name }}
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Test json stringify
      id: testfnc
      run: |
        CURRENT_VERSION=$(jq .version package.json | sed 's:^.\(.*\).$:\1:')
        CURRENT_BUILD=$(jq .build package.json | sed 's:^.\(.*\).$:\1:')
        BUILD=$((${CURRENT_BUILD}+1))

        echo ::set-output name=version::"$CURRENT_VERSION"
        echo ::set-output name=build::"$BUILD"

        echo "::debug::Updating package.json with ${CURRENT_VERSION} ${BUILD}"
        
        VER="${CURRENT_VERSION}"; sed -i "" "s|version\":.*|version\": \"${VER}\",|" package.json
        BUILD="${BUILD}"; sed -i "" "s|build\":.*|build\": \"${BUILD}\",|" package.json

    - name: Updated package.json
      run: |
        echo "::debug::Show package.json"
        cat package.json
        
    - name: Test the output
      run: |
        echo "::debug::Version:${{steps.testfnc.outputs.version}} Build:${{steps.testfnc.outputs.build}}"
        echo "::debug::Branch:${{steps.extract_branch.branch}}"
        echo "::debug::REF:${{ github.event.pull_request.head.ref }}"


    # - name: Tag and commit
    #   uses: EndBug/add-and-commit@v8
    #   with:
    #     tag: "v${{steps.testfnc.outputs.version}}-${{steps.testfnc.outputs.build}}"
    #     message: 'Version updated to ${{steps.testfnc.outputs.version}}(${{steps.testfnc.outputs.build}})'
    #     push: "origin ${{steps.extract_branch.branch}} --force"

    # - name: React to comment
    #   uses: actions/github-script@v4
    #   with:
    #     script: |
    #       const {owner, repo} = context.issue;
    #       github.reactions.createForIssueComment({
    #         owner,
    #         repo,
    #         comment_id: context.payload.comment.id,
    #         content: "rocket",
    #       });

    # - name: Message success
    #   if: ${{ success() }}
    #   uses: actions/github-script@v4
    #   with:
    #     script: |
    #       github.issues.createComment({
    #         issue_number: context.issue.number,
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         body: 'Deployment succeeded! ✅',
    #       });
    
    # - name: Message failure
      # if: ${{ failure() }}
      # uses: actions/github-script@v4
      # with:
      #   script: |
      #     github.issues.createComment({
      #       issue_number: context.issue.number,
      #       owner: context.repo.owner,
      #       repo: context.repo.repo,
      #       body: 'Deployment failed! ❌',
      #     });