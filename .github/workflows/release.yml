name: Release app

on:
  issue_comment:
    types:
      - "created"

jobs:
  version_bump:
    name: Version Bump
    runs-on: macos-latest
    
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/release' }}
    steps:

    - name: Get current branch
      uses: xt0rted/pull-request-comment-branch@v1
      id: comment-branch
    
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: ${{ steps.comment-branch.outputs.head_ref }}
    
    - name: Get current version info and update it
      id: testfnc
      run: |
        CURRENT_VERSION=$(jq .version package.json | sed 's:^.\(.*\).$:\1:')
        CURRENT_BUILD=$(jq .build package.json | sed 's:^.\(.*\).$:\1:')
        BUILD=$((${CURRENT_BUILD}+1))

        echo ::set-output name=version::"$CURRENT_VERSION"
        echo ::set-output name=build::"$BUILD"

        echo "::debug::Updating package.json with ${CURRENT_VERSION} ${BUILD}"
        
        VER="${CURRENT_VERSION}"; sed -i "" "s|version\":.*|version\": \"${VER}\",|" package.json
        BUILD="${BUILD}"; sed -i "" "s|build\":.*|build\": \"${BUILD}\",|" package.json

    - name: Show updated package.json
      run: |
        echo "::debug::Show package.json"
        cat package.json
        
    - name: Test the output
      run: |
        echo "::debug::github.event_name: ${{github.event_name}}"
        echo "::debug::action_ref:${{github.action_ref}}"
        echo "::debug::ref:${{github.ref}}"
        echo "::debug::head_ref:${{github.head_ref}}"
        echo "::debug::base_ref:${{github.base_ref}}"
        echo "::debug::ref_name:${{github.ref_name}}"
        echo "::debug::ref_type:${{github.ref_type}}"
        echo "::debug::sha:${{github.sha}}"
        echo "::debug::comment-branch:${{steps.comment-branch.outputs.head_ref}}"
        echo "::debug::Version:${{steps.testfnc.outputs.version}} Build:${{steps.testfnc.outputs.build}}"

    # - name: Bump iOS version
    #   uses: yanamura/ios-bump-version@v1
    #   with:
    #     version: ${{steps.testfnc.outputs.version}}
    #     build-number: ${{steps.testfnc.outputs.build}}
    #     project-path: ios #Example for React Native project

    - name: Bump iOS version myself
      run: |
        sed -i '' -e 's/MARKETING_VERSION \= [^\;]*\;/MARKETING_VERSION = ${{steps.testfnc.outputs.version}};/' ios/githubactions.xcodeproj/project.pbxproj
        cd ios
        xcrun agvtool new-version ${{steps.testfnc.outputs.build}}
        cd ..

    - name: Bump Android version
      uses: chkfung/android-version-actions@v1.1
      with:
        gradlePath: android/app/build.gradle
        versionCode: ${{steps.testfnc.outputs.build}}
        versionName: ${{steps.testfnc.outputs.version}}(${{steps.testfnc.outputs.build}})

    - name: Check git status after 
      run: |
        git diff

    # - name: Tag and commit
    #   uses: EndBug/add-and-commit@v8
    #   with:
    #     tag: "v${{steps.testfnc.outputs.version}}-${{steps.testfnc.outputs.build}}"
    #     message: 'Version updated to ${{steps.testfnc.outputs.version}}(${{steps.testfnc.outputs.build}})'
    #     push: "origin ${{steps.extract_branch.branch}} --force"

    # - name: React to comment
    #   uses: actions/github-script@v4
    #   with:
    #     script: |
    #       const {owner, repo} = context.issue;
    #       github.reactions.createForIssueComment({
    #         owner,
    #         repo,
    #         comment_id: context.payload.comment.id,
    #         content: "rocket",
    #       });

    # - name: Message success
    #   if: ${{ success() }}
    #   uses: actions/github-script@v4
    #   with:
    #     script: |
    #       github.issues.createComment({
    #         issue_number: context.issue.number,
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         body: 'Deployment succeeded! ✅',
    #       });
    
    # - name: Message failure
      # if: ${{ failure() }}
      # uses: actions/github-script@v4
      # with:
      #   script: |
      #     github.issues.createComment({
      #       issue_number: context.issue.number,
      #       owner: context.repo.owner,
      #       repo: context.repo.repo,
      #       body: 'Deployment failed! ❌',
      #     });